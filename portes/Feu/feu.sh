#!/bin/bash
set -euo pipefail

#temps et score :
limite=900         # temps max (15 minutes)
penalite=30        # +30 s √† chaque mauvaise r√©ponse
total_penalites=0  # cumul des p√©nalit√©s
debut=$(date +%s)  # temps de d√©part

# ---
clear
echo "        üî• PORTE DU FEU ‚Äî EPREUVE 1 üî•"
echo ""
echo "Bienvenue, voyageur..."
echo "Tu viens d‚Äôouvrir la Porte du Feu, gardienne de la flamme √©ternelle."
echo ""
echo "Pour que la flamme te reconnaisse, tu devras prouver ta ma√Ætrise du Feu :"
echo "  üî∏ Cherche le fichier sacr√© dont le nom t‚Äôest r√©v√©l√©."
echo "  üî∏ Lis-y l‚Äô√©nigme cach√©e entre les braises."
echo "  üî∏ R√©ponds avant que la flamme ne s‚Äô√©teigne (15 minutes)."
echo ""
echo "‚è±  Tant que le temps s‚Äô√©coule... la flamme faiblit..."
echo "Tape OUT si tu veux renoncer et quitter cette √©preuve."
echo ""
sleep 3

# Cr√©ation du labyrinthe
LAB="lab_feu"
rm -rf "$LAB"
mkdir -p "$LAB"/{combustible/{bois,papier},comburant/{air,oxygene},energie/{etincelle,friction}}

# 2) Choix du fichier et de l'√©nigme
dossiers_feu=($(find "$LAB" -type d))
chemin_fichier="${dossiers_feu[$RANDOM % ${#dossiers_feu[@]}]}/flamme.txt"

enigmes=(
  "√ânigme FEU : Je nais de l'√©treinte de l'air et du bois. Qui suis-je ?"
  "√ânigme FEU : Plus je suis chaude, plus je deviens bleue. Quelle est ma couleur ?"
  "√ânigme FEU : Je reste quand tout br√ªle. Qui suis-je ?"
)
reponses=("feu" "bleu" "cendre")

choix=$((RANDOM % ${#enigmes[@]}))
echo "${enigmes[$choix]}" > "$chemin_fichier"
bonne_reponse="${reponses[$choix]}"
nom_fichier="$(basename "$chemin_fichier")"

echo "üî• Cherche le fichier nomm√© : $nom_fichier"
echo ""

# 3) Demande chemin du fichier
while true; do
  maintenant=$(date +%s)
  temps_utilise=$(( (maintenant - debut) + total_penalites ))
  temps_restant=$(( limite - temps_utilise ))

  # condition de temps
  if (( temps_restant <= 0 )); then
    echo "‚è∞ Le temps est √©coul√© !"
    echo "‚≠ê √âtoiles : 0"
    exit 0
  fi

  echo -n "Chemin ABSOLU du fichier ($temps_restant s restants) > "
  if ! read -r -t "$temps_restant" chemin; then
    echo "‚è∞ Le temps est √©coul√© !"
    echo "‚≠ê √âtoiles : 0"
    exit 0
  fi

  [[ "${chemin,,}" == "out" ]] && { echo "üí® Abandon."; exit 0; }

  if [[ -f "$chemin" && "$(basename "$chemin")" == "$nom_fichier" && "$(realpath "$chemin")" == "$(realpath "$fichier_cache")" ]]; then
    echo "‚úîÔ∏è  Fichier trouv√© !"
    echo "------ √âNIGME ------"; cat "$chemin"; echo "--------------------"
    break
  else
    echo "‚ùå Mauvais fichier. Essaie encore."
  fi
done

# 4) V√©rif r√©p question
while true; do
  maintenant=$(date +%s)
  temps_utilise=$(( (maintenant - debut) + total_penalites ))
  temps_restant=$(( limite - temps_utilise ))

  if (( temps_restant <= 0 )); then
    echo "‚è∞ Le temps est √©coul√© !"
    echo "‚≠ê √âtoiles : 0"
    exit 0
  fi

  echo -n "R√©ponse √† l'√©nigme ($temps_restant s restants) > "
  if ! read -r -t "$temps_restant" reponse; then
    echo "‚è∞ Le temps est √©coul√© !"
    echo "‚≠ê √âtoiles : 0"
    exit 0
  fi

  [[ "${reponse,,}" == "out" ]] && { echo "üí® Abandon."; exit 0; }

  reponse_norm="$(echo "$reponse" | tr '[:upper:]' '[:lower:]' | xargs)"
  bonne_norm="$(echo "$bonne" | tr '[:upper:]' '[:lower:]' | xargs)"

  if [[ "$reponse_norm" == "$bonne_norm" ]]; then
    echo "‚úîÔ∏è Bonne r√©ponse !"
    break
  else
    total_penalites=$(( total_penalites + penalite ))
    echo "‚ùå Mauvaise r√©ponse. +${penalite}s de p√©nalit√© (total = ${total_penalites}s)."
  fi
done

# 5) score et fin du jeu
fin=$(date +%s)
temps_brut=$(( fin - debut ))
temps_total=$(( temps_brut + total_penalites ))
(( temps_total > limite )) && temps_total=$limite

etoiles=1
(( temps_total <= 300 )) && etoiles=3
(( temps_total > 300 && temps_total <= 600 )) && etoiles=2

m=$((temps_brut/60)); s=$((temps_brut%60))

echo
echo "üî•Fin de l'√©preuve, voyons voir si vous avez trouver votre √©quilibre"
printf "‚è± Temps brut       : %dm %02ds\n" $((brut/60)) $((brut%60))
echo   "‚õî P√©nalit√©s        : ${penalites}s"
echo   "‚≠ê √âtoiles          : ${etoiles}"

# --- 6) Message final th√©matique selon le r√©sultat ---
if (( etoiles == 3 )); then
  message="üî• Bravo, ma√Ætre des flammes ! Le Feu t‚Äôob√©it et danse √† ton commandement."
elif (( etoiles == 2 )); then
  message="üî• Bon effort, voyageur ardent. Le Feu t‚Äôa reconnu, mais tes cendres fument encore..."
elif (( etoiles == 1 )); then
  message="üî• L‚Äô√©preuve t‚Äôa consum√© lentement... Tes flammes vacillent, mais subsistent encore."
else
  message="üíÄ La flamme s‚Äôest √©teinte. Il ne reste que des braises froides et ton √©chec."
fi

echo "$message"
